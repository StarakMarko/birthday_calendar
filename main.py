import os
import discord
from discord.ext import commands, tasks
from discord import app_commands
from dotenv import load_dotenv
import sqlite3
from datetime import datetime, timezone, timedelta, time

from keep_alive import keep_alive

# –ó–º—ñ—â–µ–Ω–Ω—è UTC –¥–ª—è –≤–∞—à–æ–≥–æ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å—É.
# –Ø–∫—â–æ –≤–∞—à —á–∞—Å UTC+3, –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å UTC_OFFSET = 3.
UTC_OFFSET = 3
message_hour = 16  # –ì–æ–¥–∏–Ω–∞, –∫–æ–ª–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –º–∞—î –±—É—Ç–∏ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ (–∑–∞ –º—ñ—Å—Ü–µ–≤–∏–º —á–∞—Å–æ–º)


BASE_DIR = os.path.dirname(os.path.abspath(__file__))


def create_table():
    """–°—Ç–≤–æ—Ä—é—î —Ç–∞–±–ª–∏—Ü—é 'calendar' —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö, —è–∫—â–æ –≤–æ–Ω–∞ —â–µ –Ω–µ —ñ—Å–Ω—É—î."""
    connection = sqlite3.connect(os.path.join(BASE_DIR, "calendar.db"))
    cursor = connection.cursor()

    cursor.execute(
        """
        CREATE TABLE IF NOT EXISTS "calendar" (
            "name" TEXT,
            "birthday" TEXT,
            PRIMARY KEY("name"))"""
    )
    connection.commit()
    connection.close()


create_table()


def add_birthday(name: str, birthday_int: str) -> None:
    """–î–æ–¥–∞—î –∞–±–æ –æ–Ω–æ–≤–ª—é—î –∑–∞–ø–∏—Å –ø—Ä–æ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö."""
    connection = sqlite3.connect(os.path.join(BASE_DIR, "calendar.db"))
    try:
        cursor = connection.cursor()
        cursor.execute(
            """
            INSERT INTO calendar (name, birthday)
            VALUES (?, ?)
            ON CONFLICT(name) DO UPDATE SET birthday=excluded.birthday
        """,
            (name, birthday_int),
        )
        connection.commit()
    finally:
        connection.close()


def get_birthday(birthday_int: str):
    """–û—Ç—Ä–∏–º—É—î –≤—Å—ñ —ñ–º–µ–Ω–∞, —É —è–∫–∏—Ö –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞–¥–∞–Ω—ñ–π –¥–∞—Ç—ñ."""
    connection = sqlite3.connect(os.path.join(BASE_DIR, "calendar.db"))
    try:
        cursor = connection.cursor()
        cursor.execute(
            "SELECT name, birthday FROM calendar WHERE birthday = ?", (birthday_int,)
        )
        rows = cursor.fetchall()
        return rows
    finally:
        connection.close()


def get_all_birthdays():
    """–û—Ç—Ä–∏–º—É—î –≤—Å—ñ –∑–∞–ø–∏—Å–∏ –ø—Ä–æ –¥–Ω—ñ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö."""
    connection = sqlite3.connect(os.path.join(BASE_DIR, "calendar.db"))
    try:
        cursor = connection.cursor()
        cursor.execute("SELECT name, birthday FROM calendar ORDER BY birthday ASC")
        rows = cursor.fetchall()
        return rows
    finally:
        connection.close()


def delete_birthday(name: str) -> int:
    """–í–∏–¥–∞–ª—è—î –∑–∞–ø–∏—Å –ø—Ä–æ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –∑–∞ —ñ–º–µ–Ω–µ–º."""
    connection = sqlite3.connect(os.path.join(BASE_DIR, "calendar.db"))
    try:
        cursor = connection.cursor()
        cursor.execute("DELETE FROM calendar WHERE name = ?", (name,))
        connection.commit()
        return cursor.rowcount
    finally:
        connection.close()


load_dotenv()
TOKEN = os.getenv("DISCORD_TOKEN")

keep_alive()

intents = discord.Intents.default()
intents.message_content = True  # –î–æ–∑–≤–æ–ª—è—î –±–æ—Ç—É —á–∏—Ç–∞—Ç–∏ –≤–º—ñ—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
intents.guilds = True  # –î–æ–∑–≤–æ–ª—è—î –±–æ—Ç—É –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≥—ñ–ª—å–¥—ñ—ó

bot = commands.Bot(command_prefix="!", intents=intents)


@bot.event
async def on_ready():
    """–í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è, –∫–æ–ª–∏ –±–æ—Ç –ø—ñ–¥–∫–ª—é—á–∞—î—Ç—å—Å—è –¥–æ Discord."""
    print(f"–£–≤—ñ–π—à–æ–≤ —è–∫ {bot.user} (ID: {bot.user.id})")
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –∑–∞–≤–¥–∞–Ω–Ω—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–Ω—ñ–≤ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è
    if not check_birthdays.is_running():
        check_birthdays.start()
    print("–ó–∞–≤–¥–∞–Ω–Ω—è check_birthdays –∑–∞–ø—É—â–µ–Ω–æ.")

    # –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ –∫–æ–º–∞–Ω–¥–∏ –¥–æ–¥–∞—Ç–∫—ñ–≤
    try:
        synced = await bot.tree.sync()
        print(f"–°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥.")
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∫–æ–º–∞–Ω–¥: {e}")


@tasks.loop(time=time(hour=message_hour - UTC_OFFSET, minute=0))
async def check_birthdays():
    """
    –ü–µ—Ä–µ–≤—ñ—Ä—è—î –¥–Ω—ñ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —Ç–∞ –Ω–∞–¥—Å–∏–ª–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞ –≤—Å—ñ —Å–µ—Ä–≤–µ—Ä–∏.
    –ó–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è —â–æ–¥–Ω—è –æ –∑–∞–¥–∞–Ω—ñ–π –≥–æ–¥–∏–Ω—ñ.
    """
    await bot.wait_until_ready()
    print(f"–ó–∞–ø—É—Å–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–Ω—ñ–≤ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –æ {datetime.now().strftime('%H:%M:%S')}")

    now = datetime.now()
    # –§–æ—Ä–º–∞—Ç "–¥–µ–Ω—å/–º—ñ—Å—è—Ü—å" –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö
    today_str = now.strftime("%d/%m")
    rows = get_birthday(today_str)

    if not rows:
        print(f"–°—å–æ–≥–æ–¥–Ω—ñ ({today_str}) –Ω–µ–º–∞—î –¥–Ω—ñ–≤ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è.")
        return

    names = ", ".join(name for name, _ in rows)
    msg = f"üéâ –°—å–æ–≥–æ–¥–Ω—ñ ({now:%d.%m}) –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –≤: {names}! üéÇ"

    # –ü–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –≤—Å—ñ –≥—ñ–ª—å–¥—ñ—ó (—Å–µ—Ä–≤–µ—Ä–∏), –¥–æ —è–∫–∏—Ö –±–æ—Ç –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π
    for guild in bot.guilds:
        target_channel = None
        # –°–ø—Ä–æ–±–∞ –∑–Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª 'birthdays', –ø–æ—Ç—ñ–º 'general', –ø–æ—Ç—ñ–º –±—É–¥—å-—è–∫–∏–π —Ç–µ–∫—Å—Ç–æ–≤–∏–π –∫–∞–Ω–∞–ª
        # –∑ –¥–æ–∑–≤–æ–ª–æ–º –Ω–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        for channel in guild.text_channels:
            if channel.permissions_for(guild.me).send_messages:
                if channel.name == "birthdays":
                    target_channel = channel
                    break
                elif (
                    channel.name == "general" and not target_channel
                ):  # –Ø–∫—â–æ 'birthdays' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –∞–ª–µ 'general' —î
                    target_channel = channel
                elif (
                    not target_channel
                ):  # –Ø–∫—â–æ –Ω—ñ 'birthdays', –Ω—ñ 'general' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –±–µ—Ä–µ–º–æ –ø–µ—Ä—à–∏–π –¥–æ—Å—Ç—É–ø–Ω–∏–π
                    target_channel = channel

        if target_channel:
            try:
                await target_channel.send(msg)
                print(
                    f"–ù–∞–¥—ñ—Å–ª–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —É –∫–∞–Ω–∞–ª '{target_channel.name}' –≤ –≥—ñ–ª—å–¥—ñ—ó '{guild.name}'."
                )
            except discord.Forbidden:
                print(
                    f"[–ü–û–ü–ï–†–ï–î–ñ–ï–ù–ù–Ø] –ù–µ–º–∞—î –¥–æ–∑–≤–æ–ª—É –Ω–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —É –∫–∞–Ω–∞–ª—ñ '{target_channel.name}' –≤ –≥—ñ–ª—å–¥—ñ—ó '{guild.name}'."
                )
            except Exception as e:
                print(
                    f"[–ü–û–ú–ò–õ–ö–ê] –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É –≥—ñ–ª—å–¥—ñ—é '{guild.name}': {e}"
                )
        else:
            print(
                f"[–ü–û–ü–ï–†–ï–î–ñ–ï–ù–ù–Ø] –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ–≥–æ –∫–∞–Ω–∞–ª—É –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É –≥—ñ–ª—å–¥—ñ—ó '{guild.name}'."
            )


@bot.tree.command(name="add_bday", description="–î–æ–¥–∞—Ç–∏ –∞–±–æ –æ–Ω–æ–≤–∏—Ç–∏ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è.")
@app_commands.describe(name="–Ü–º'—è –ª—é–¥–∏–Ω–∏", day="–î–µ–Ω—å (1-31)", month="–ú—ñ—Å—è—Ü—å (1-12)")
async def add_bday(interaction: discord.Interaction, name: str, day: int, month: int):
    """–î–æ–¥–∞—î –∞–±–æ –æ–Ω–æ–≤–ª—é—î –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö."""
    if not (1 <= day <= 31 and 1 <= month <= 12):
        await interaction.response.send_message(
            "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –¥—ñ–π—Å–Ω–∏–π –¥–µ–Ω—å (1-31) —Ç–∞ –º—ñ—Å—è—Ü—å (1-12).", ephemeral=True
        )
        return

    # –§–æ—Ä–º–∞—Ç—É—î–º–æ –¥–µ–Ω—å —ñ –º—ñ—Å—è—Ü—å —è–∫ "–î–î/–ú–ú"
    birthday_str = f"{day:02d}/{month:02d}"
    add_birthday(name, birthday_str)
    await interaction.response.send_message(
        f"–î–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è {name} ({birthday_str}) –¥–æ–¥–∞–Ω–æ/–æ–Ω–æ–≤–ª–µ–Ω–æ.", ephemeral=True
    )


@bot.tree.command(name="list_bdays", description="–ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ –¥–Ω—ñ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è.")
async def list_bdays(interaction: discord.Interaction):
    """–ü–æ–∫–∞–∑—É—î —Å–ø–∏—Å–æ–∫ —É—Å—ñ—Ö –¥–Ω—ñ–≤ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö."""
    all_bdays = get_all_birthdays()
    if not all_bdays:
        await interaction.response.send_message(
            "–£ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö –Ω–µ–º–∞—î –¥–Ω—ñ–≤ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è.", ephemeral=True
        )
        return

    response_message = "–°–ø–∏—Å–æ–∫ –¥–Ω—ñ–≤ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è:\n"
    for name, bday in all_bdays:
        response_message += f"- {name}: {bday}\n"

    await interaction.response.send_message(response_message, ephemeral=True)


@bot.tree.command(name="delete_bday", description="–í–∏–¥–∞–ª–∏—Ç–∏ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è.")
@app_commands.describe(name="–Ü–º'—è –ª—é–¥–∏–Ω–∏, –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —è–∫–æ—ó –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–¥–∞–ª–∏—Ç–∏")
async def delete_bday(interaction: discord.Interaction, name: str):
    """–í–∏–¥–∞–ª—è—î –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö."""
    row_count = delete_birthday(name)
    if row_count > 0:
        await interaction.response.send_message(
            f"–î–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è {name} –≤–∏–¥–∞–ª–µ–Ω–æ.", ephemeral=True
        )
    else:
        await interaction.response.send_message(
            f"–î–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è {name} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.", ephemeral=True
        )


# –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
bot.run(TOKEN)
